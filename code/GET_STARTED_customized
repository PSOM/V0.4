A. If you want to have greater control on the installation, only 4 steps are necessary to start running psom.

------
step 1: Please edit the ./optfile to set the options that fit your environment. Be careful with the syntax ! 

------
step 2: When this file is correctly set, you can type this command:

   ##############################
   #  sh tools/compile_complex.sh
   ##############################
  It will create the makefile in ./mkfile.
  
------
step 3: Please edit the ./namelist file.

------
step 4: When this file is correctly set, you can type this command:
   ##############################
   # ./exe/nh < ./namelist
   ##############################
  It will start and run the model.
  By default, the output will appear on the screen and the output files will go to ../output/.



B. Further use:

* **************************
* OUTPUT

* Tips to not using netcdf:

  By default, both binary and netcdf outputs are created. If you wish not to use netcdf and do not want to install netcdf libraries, follow these steps previously to the 4 steps process described above:

   - edit ./optfile and set define_netcdf to "F" : 
      define_netcdf=T           by default
      define_netcdf=F           if you do not want using netcdf.


   - edit ./model/inc/cppdef and undefine output_netcdf :
      #define file_output_cdf   by default
      #undef file_output_cdf    if you do not want to use netcdf.

   That should be it !

* Tips to not using binary output:

  By default, both binary and netcdf outputs are created. If you wish not to use binary output, follow these steps previously to the 4 steps process described above:

   - edit ./model/inc/cppdef and undefine output_netcdf :
      #define file_output_bin   by default
      #undef file_output_bin    if you do not want to use netcdf.

   That should be it !


* *******************
* MULTIPLE EXPERIMENTS

* - Not using any model_build:
  If you do not want to use that possibility, you still can use tools/compile_complex.sh, which will then be equivalent to :
    ##############################
    # sh tools/genmakefilel
    # sh tools/compile_simple.sh
    ##############################


* - Use of a single model_build:

  If nothing is put in model_build, then the compilation is a classical one. BUT, this directory comes with a structure (model / model_build) that may make the development easier. You can use it this way:
    Instead of replacing files in ./model, you are advised to put the .f90 and .h files you want to alter in ./model_build. You can obviously copy them from ./model and then make modifications or copy from your own versions.
    ##############################
    # sh tools/compile_complex.sh
    ##############################
    The files in ./model_build will overtake those from ./model. The executable exe/nh will be created based on a combination of old and new .f90 files.   


* - Use of a multiple model_builds:

  If you have several experiences, you can create as many "model_build" directories as needed:
    code/expe_1 code/expe_2...
   These directories must have the same structure as model_build:
     code/expe_1/src
     code/expe_1/inc

    ##############################
    # sh tools/compile_complex.sh expe_1
    ##############################
    The files in ./expe_1 will overtake those from ./model. The executable exe/nh_expe_1 will be created based on a combination of old and new .f90 files.   




* *******************
* CHANGING GRID SIZE

How to change the grid size ?

- Check model/inc/size.h.
   If your grid set appears as commented, comment the current one and uncomment the one you want.
     Be aware that if your grid set requires more than 2Go, you might experience compilation issues. If so, you can fix your issue by doing that:
       - edit  tools/genmakefilel and 
       - replace the 2 ligns 63 and 64 by: 
           fflags_o="-fpp -real-size 64 -mcmodel medium -shared-intel -stand 03 -u" 
           fflags_e="-fpp -real-size 64 -mcmodel medium -shared-intel -stand 03 -u" 
  

   If your grid set does not appear, you can create the line required in size.h. To do so, 
       - compile tools/preproc.f90, by typing something like: ifort tools/preproc.f90 -o preproc
       - run preproc: ./preproc
       - fill the values that are asked. By default, ngrid=4 is a good choice.
       - copy the line the program provides in size.h.

   In both cases, compile and it should be right !


* *******************
* CHECKING THE MODEL

If you work on the core of the model, you will surely want to check if your modification do not alter the results. A first simple tool can help you:
  

    ##############################
    # sh tools/test_energy.sh
    ##############################

   will test the executable ./exe/nh with a standard namelist. It needs matlab installed. 



* *******************
* SOME CLEANING

To clean up a bit the mkfile directory, you can type:
   ##############################
   # make -Cmkfile/ clean 
   ##############################
   Use cleanmore instead of clean to also remove the executable file. 



